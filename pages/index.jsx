import Head from "next/head";
import { Inter } from "next/font/google";
import Cover from "@/parts/Cover";
import Invitation from "@/parts/Invitation";

import Stepper, { Controller, MainContent } from "@/elements/Stepper";
import Button from "@/elements/Button";
import { useEffect, useState } from "react";
import Test from "@/parts/Test";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [data, setdata] = useState({
    nickname: "",
    wish: "",
  });

  function requestFullScreen(element) {
    // Supports most browsers and their versions.
    var requestMethod =
      element.requestFullScreen ||
      element.webkitRequestFullScreen ||
      element.mozRequestFullScreen ||
      element.msRequestFullScreen;

    if (requestMethod) {
      // Native full screen.
      requestMethod.call(element);
    } else if (typeof window.ActiveXObject !== "undefined") {
      // Older IE.
      var wscript = new ActiveXObject("WScript.Shell");
      if (wscript !== null) {
        wscript.SendKeys("{F11}");
      }
    }
  }

  const onChange = (e) => {
    const target = {
      ...data,
      [e.target.name]: [e.target.value],
    };
  };

  useEffect(() => {
    var elem = document.documentElement;
    requestFullScreen(elem);
  });
  const steps = {
    main: {
      content: (
        <Invitation
          data={data}
          onChange={onChange}
        ></Invitation>
      ),
    },
    cover: {
      content: <Test></Test>,
    },
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>
      <Stepper steps={steps}>
        {(currentStep, steps, prevStep, nextStep) => (
          <>
            <MainContent
              data={steps}
              current={currentStep}
            />
          </>
        )}
      </Stepper>
    </>
  );
}
